name: Python Package

on:
  pull_request:
    branches: [main]
    paths: ["python/**", ".github/workflows/build-python.yml"]
  workflow_dispatch:

env:
  CI_BUILD: true

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
      fail-fast: false  # Continue testing other versions even if one fails

    steps:
      - name: Checkout entire repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          cd python
          uv sync --dev

      - name: Copy resources folder into python/src/vista_sdk
        run: |
          # Remove existing resources directory if it exists
          rm -rf ./python/src/vista_sdk/resources
          # Copy resources directory
          cp -r ./resources ./python/src/vista_sdk/resources

      - name: Generate VisVersion script
        env:
          PYTHONPATH: ${{ github.workspace }}/python/src
        run: |
          cd python
          uv run python src/vista_sdk/source_generator/vis_versions_generator.py --resources_dir ../resources

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}/python/src
        run: |
          cd python
          uv run pytest tests --ignore=tests/benchmark

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout entire repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          cd python
          uv sync --dev

      - name: Copy resources folder into python/src/vista_sdk
        run: |
          # Remove existing resources directory if it exists
          rm -rf ./python/src/vista_sdk/resources
          # Copy resources directory
          cp -r ./resources ./python/src/vista_sdk/resources

      - name: Generate VisVersion script
        env:
          PYTHONPATH: ${{ github.workspace }}/python/src
        run: |
          cd python
          uv run python src/vista_sdk/source_generator/vis_versions_generator.py --resources_dir ../resources

      - name: Build package
        run: |
          cd python
          uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: python/dist/

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Publish package
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv publish dist/*
