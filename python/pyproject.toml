[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["vista-sdk"]


[project]
name = "vista-sdk"
version = "0.1.0-preview"
description = "Vista SDK for Python"
authors = [{ name = "Vista Team", email = "vista@dnv.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "requests>=2.25.1",
    "pydantic==2.7.4",
    "httpx>=0.18.0",
    "cachetools==5.3.3",
    "parameterized==0.9.0",
    "python-dotenv==1.0.1",
    "dotenv>=0.9.9",
    "ruff>=0.0.263",
    "mypy>=1.0.0",

    # Documentation dependencies
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.27.0",
    "mkdocs-material>=9.5.49",
    "mkdocs-gen-files>=0.5.0",
    "graphviz>=0.20.3",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.5",
]

[tool.pytest.ini_options]
markers = [
    "benchmark: mark test as a benchmark test",
    "load_test: mark test as a load test",
    "slow: mark test as slow running",
]
addopts = "-ra -q --benchmark-only --benchmark-autosave"
testpaths = ["tests"]
python_files = ["test_*.py"]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning"]

[tool.ruff]
line-length = 88
src = ["vista_sdk"]

[tool.ruff.lint.per-file-ignores]
# Allow the use of assert in tests
"tests/*" = ["S101"]


[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "C90", # mccabe
    "I",   # isort
    "ICN", # flake8-import-conventions
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "PD",  # pandas-vet
    "PLC", # Pylint convention
    "PLE", # Pylint error
    # "PLR",  # Pylint refactor
    "NPY",  # NumPy
    "FAST", # FastAPI
    "RUF",  # Ruff-specific rules
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"
